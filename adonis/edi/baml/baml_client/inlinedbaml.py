###############################################################################
#
#  Welcome to Baml! To use this generated code, please run the following:
#
#  $ pip install baml
#
###############################################################################

# This file was generated by BAML: please do not edit it. Instead, edit the
# BAML files and re-generate this code.
#
# ruff: noqa: E501,F401
# flake8: noqa: E501,F401
# pylint: disable=unused-import,line-too-long
# fmt: off

file_map = {
    
    "X12N/835/5010_X221A1/extractor.v0.baml": "class X12_835_5010_X221A1_Extractor_Schema_V0 {\n    heading X12_835_5010_X221A1_Heading @description(#\"\n        Example Input:\n        ---\n        ISA*00*          *00*          *ZZ*ABCPAYER       *ZZ*XYZPROVIDER     *210101*1200*^*00501*123456789*0*P*>~\n        GS*HP*ABCD*XYZPROVIDER*20210101*1200*123456789*X*005010X221A1~\n        ST*835*10012345~\n        BPR*I*100.00*C*CHK************20210101~\n        TRN*1*CK123456789*987654321~\n        REF*EV*FAC~\n        DTM*405*20210101~\n        N1*PR*ANY PLAN USA~\n        N3*123 MAIN STREET~\n        N4*ANYCITY*OH*44100~\n        PER*CX**TE*8005551212~\n        PER*BL*EDI*TE*8005552222*EM*edi.support@abcpayer.com~\n        N1*PE*XYZ PROVIDER*XX*1122334455~\n        N3*2255 OAK STREET~\n        N4*ANYTOWN*CA*90210~\n        REF*TJ*987654321~\n        ---\n    \"#)\n\n    detail X12_835_5010_X221A1_Detail_Loop_V0[] @description(#\"\n        Example Input:\n        ---\n        LX*1~\n        CLP*PATIENT123*1*250*200**MC*1234567890*11*1~\n        NM1*QC*1*DOE*JOHN*N***MI*XYZ987654321~\n        REF*1L*98765A~\n        DTM*050*20210101~\n        PER*CX*G CUSTOMER SERVICE DEPT*TE*8004074627~\n        AMT*AU*150~\n        SVC*HC:99213*150*80**1~\n        DTM*472*20210101~\n        CAS*CO*45*70~\n        AMT*B6*80~\n        SVC*HC:85003*100*0**1~\n        DTM*472*20210101~\n        CAS*CO*204*100~\n        SVC*HC:36415*150*0**1~\n        DTM*472*20210101~\n        CAS*CO*97*150~\n        ---\n    \"#)\n\n    summary X12_835_5010_X221A1_Summary_V0  @description(#\"\n        Example Input:\n        ---\n        SE*33*10012345~\n        GE*1*123456789~\n        ---\n    \"#)\n}\n\nclass X12_835_5010_X221A1_Extractor_Input_V0 {\n    body string\n}\n\nclass X12_835_5010_X221A1_Extractor_Output_V0 {\n    data X12_835_5010_X221A1_Extractor_Schema_V0 @description(#\"\n        Example Input:\n        ---\n        ---\n    \"#)\n}\n\n\nfunction X12_835_5010_X221A1_Extractor(params: X12_835_5010_X221A1_Extractor_Input_V0) -> X12_835_5010_X221A1_Extractor_Output_V0 {\n  client CustomAWS_Mistral_Large_2401_V1\n  prompt #\"\n    You are an expert in X12 Electronic Data Interchange (EDI) with a specialization in the 835 X221A1 - Health Care Claim Payment/Advice transaction set. Your role is to analyze, parse, and transform raw X12 transaction data into structured data that complies with the provided JSON schema, while providing metadata explanations for decisions made during the extraction process.\n\n    Responsibilities:\n    1. Data Extraction:\n    - Parse the provided raw X12 transaction data.\n    - Transform the data into the specified JSON schema, ensuring compliance with the X12 HIPAA 5010 standards for 835 X221A1.\n\n    2. Rules for Data Processing:\n    - Trim all strings to remove leading and trailing whitespace. For example, `\" hello \"` becomes `\"hello\"`.\n    - Replace any empty strings with `null`.\n    - Any missing or invalid fields should also result in `null` values, unless explicitly required by the schema.\n\n    3. Validation:\n    - If the input X12 data is invalid, malformed, incomplete, or fails to provide the required elements based on the schema, return:\n        ```json\n        {\n        \"status\": \"failed\",\n        \"reason\": \"Invalid or incomplete X12 data\"\n        }\n        ```\n\n    Extract this X12 transaction:\n     ---\n     {{ params.body }}\n     ---\n\n    \n     {{ ctx.output_format }}\n  \"#\n}\n",
    "X12N/835/5010_X221A1/judge.v0.baml": "class X12_835_5010_X221A1_Judge_Schema_Error {\n    extractor_id string\n    segment string\n    element string\n    issue string\n    description string\n}\n\nclass X12_835_5010_X221A1_Judge_Schema_Summary {\n    total_extractions int\n    total_errors int\n    extraction_status (\"valid\" | \"invalid\")\n}\n\nclass X12_835_5010_X221A1_Judge_Schema {\n    status (\"failed\" | \"passed\")\n    message string?\n    errors X12_835_5010_X221A1_Judge_Schema_Error[]\n    summary X12_835_5010_X221A1_Judge_Schema_Summary\n}\n\nclass X12_835_5010_X221A1_Judge_Input_V0 {\n    extraction X12_835_5010_X221A1_Extractor_Output_V0\n}\n\nclass X12_835_5010_X221A1_Judge_Output_V0 {\n    data X12_835_5010_X221A1_Judge_Schema @description(#\"\n        Example Input:\n        ---\n        {\n          \"status\": \"passed\",\n          \"message\": \"Extraction is valid.\",\n          \"errors\": [],\n          \"summary\": {\n            \"total_extractions\": 1,\n            \"total_errors\": 0,\n            \"extraction_status\": \"valid\"\n          }\n        }\n        ---\n    \"#)\n}\n\nfunction X12_835_5010_X221A1_Judge(params: X12_835_5010_X221A1_Judge_Input_V0) -> X12_835_5010_X221A1_Judge_Output_V0 {\n  client CustomAWS_Mistral_Large_2401_V1\n  prompt #\"\n    You are an expert in X12 Electronic Data Interchange (EDI) validation and auditing, specializing in the 835 X221A1 - Health Care Claim Payment/Advice transaction set. \n    Your role is to validate the output of a single X12 extractor, ensuring the extracted data conforms to the HIPAA X12 Release 5010 standard.\n\n    Responsibilities:\n    1. Extraction Validation:\n    - Analyze the provided extraction and ensure it complies with the X12 HIPAA 5010 specifications for the 835 X221A1 transaction set.\n\n    2. Validation Rules:\n    - Check that all mandatory fields are present and formatted correctly.\n    - Ensure correct relationships between loops, segments, and elements.\n    - Verify no missing, mismatched, or extra data fields.\n    - Validate the presence and correctness of specific transaction elements such as Claim Payment Information (CLP), Adjustments (CAS), Service Payment Information (SVC), and others.\n\n    3. Error Reporting:\n    - If the extraction fails validation, return a structured error report:\n    {\n        \"extractor_id\": \"Extractor1\",\n        \"segment\": \"CLP\",\n        \"element\": \"CLP01\",\n        \"issue\": \"Missing mandatory data element\",\n        \"description\": \"CLP01 is required for Claim Payment Information.\"\n    }\n\n    4. Summary:\n    - Provide a summary of the validation process:\n        - Total number of extractions (always 1 in this case).\n        - Total errors encountered.\n        - Extraction status: \"valid\" if no errors, \"invalid\" otherwise.\n\n    Validate this extraction:\n    ---\n    {{ params.extraction.data }}\n    ---\n\n    Return the final judgment in this format:\n    {{ ctx.output_format }}\n  \"#\n}\n",
    "X12N/835/5010_X221A1/parts/detail/2100/2110/AMT/segment.v0.baml": "class X12_835_5010_X221A1_Detail_2100_2110_AMT_V0 {\n    AMT01_amount_qualifier_code string\n    AMT02_monetary_amount float\n    AMT03_credit_debit_flag_code string?\n}\n",
    "X12N/835/5010_X221A1/parts/detail/2100/2110/CAS/segment.v0.baml": "class X12_835_5010_X221A1_Detail_2100_2110_CAS_V0 {\n    CAS01_claim_adjustment_group_code string\n    CAS02_claim_adjustment_reason_code string\n    CAS03_monetary_amount float\n    CAS04_quantity float?\n    CAS05_claim_adjustment_reason_code string?\n    CAS06_monetary_amount float?\n    CAS07_quantity float?\n    CAS08_claim_adjustment_reason_code string?\n    CAS09_monetary_amount float?\n    CAS10_quantity float?\n    CAS11_claim_adjustment_reason_code string?\n    CAS12_monetary_amount float?\n    CAS13_quantity float?\n    CAS14_claim_adjustment_reason_code string?\n    CAS15_monetary_amount float?\n    CAS16_quantity float?\n    CAS17_claim_adjustment_reason_code string?\n    CAS18_monetary_amount float?\n    CAS19_quantity float?\n}\n",
    "X12N/835/5010_X221A1/parts/detail/2100/2110/DTM/segment.v0.baml": "class X12_835_5010_X221A1_Detail_2100_2110_DTM_V0 {\n    DTM01_date_time_qualifier string\n    DTM02_date string?\n    DTM03_time string?\n    DTM04_time_code string?\n    DTM05_date_time_period_format_qualifier string?\n    DTM06_date_time_period string?\n}\n",
    "X12N/835/5010_X221A1/parts/detail/2100/2110/LQ/segment.v0.baml": "class X12_835_5010_X221A1_Detail_2100_2110_LQ_V0 {\n    LQ01_code_list_qualifier_code string?\n    LQ02_industry_code string\n}\n",
    "X12N/835/5010_X221A1/parts/detail/2100/2110/QTY/segment.v0.baml": "class X12_835_5010_X221A1_Detail_2100_2110_QTY_C001_V0 {\n    C001_01_unit_or_basis_for_measurement_code string\n    C001_02_exponent float?\n    C001_03_multiplier float?\n    C001_04_unit_or_basis_for_measurement_code string?\n    C001_05_exponent float?\n    C001_06_multiplier float?\n    C001_07_unit_or_basis_for_measurement_code string?\n    C001_08_exponent float?\n    C001_09_multiplier float?\n    C001_10_unit_or_basis_for_measurement_code string?\n    C001_11_exponent float?\n    C001_12_multiplier float?\n    C001_13_unit_or_basis_for_measurement_code string?\n    C001_14_exponent float?\n    C001_15_multiplier float?\n}\n\nclass X12_835_5010_X221A1_Detail_2100_2110_QTY_V0 {\n    QTY01_quantity_qualifier string\n    QTY02_quantity float?\n    QTY03_composite_unit_of_measure X12_835_5010_X221A1_Detail_2100_2110_QTY_C001_V0?\n    QTY04_free_form_information string?\n}\n",
    "X12N/835/5010_X221A1/parts/detail/2100/2110/REF/segment.v0.baml": "class X12_835_5010_X221A1_Detail_2100_2110_REF_C040_V0 {\n    C040_01_reference_identification_qualifier string\n    C040_02_reference_identification string\n    C040_03_reference_identification_qualifier string?\n    C040_04_reference_identification string?\n    C040_05_reference_identification_qualifier string?\n    C040_06_reference_identification string?\n}\n\nclass X12_835_5010_X221A1_Detail_2100_2110_REF_V0 {     \n    REF01_reference_identification_qualifier string\n    REF02_reference_identification string?\n    REF03_description string?\n    REF04_composite_reference_identifier X12_835_5010_X221A1_Detail_2100_2110_REF_C040_V0?\n}\n",
    "X12N/835/5010_X221A1/parts/detail/2100/2110/SVC/segment.v0.baml": "class X12_835_5010_X221A1_Detail_2100_2110_SVC_C003_V0 {\n    C003_01_product_service_id_qualifier string\n    C003_02_product_service_id string\n    C003_03_procedure_modifier string?\n    C003_04_procedure_modifier string?\n    C003_05_procedure_modifier string?\n    C003_06_procedure_modifier string?\n    C003_07_description string?\n    C003_08_product_service_id string?\n}\n\nclass X12_835_5010_X221A1_Detail_2100_2110_SVC_V0 {    \n    SVC01_composite_medical_procedure_identifier X12_835_5010_X221A1_Detail_2100_2110_SVC_C003_V0\n    SVC02_submitted_service_charge float\n    SVC03_paid_service_amount float?\n    SVC04_revenue_code string?\n    SVC05_paid_units_of_service float?\n    SVC06_composite_medical_procedure_identifier X12_835_5010_X221A1_Detail_2100_2110_SVC_C003_V0?\n    SVC07_original_submitted_units_of_service float?\n}\n",
    "X12N/835/5010_X221A1/parts/detail/2100/2110/loop.v0.baml": "class X12_835_5010_X221A1_Detail_2100_2110_Loop_V0 {\n    SVC_service_payment_information X12_835_5010_X221A1_Detail_2100_2110_SVC_V0\n    DTM_service_date X12_835_5010_X221A1_Detail_2100_2110_DTM_V0[]\n    CAS_service_adjustment X12_835_5010_X221A1_Detail_2100_2110_CAS_V0[]\n    REF_service_identification X12_835_5010_X221A1_Detail_2100_2110_REF_V0[]\n    REF_line_item_control_number X12_835_5010_X221A1_Detail_2100_2110_REF_V0?\n    REF_rendering_provider_information X12_835_5010_X221A1_Detail_2100_2110_REF_V0[]\n    REF_healthcare_policy_identification X12_835_5010_X221A1_Detail_2100_2110_REF_V0[]\n    AMT_service_supplemental_amount X12_835_5010_X221A1_Detail_2100_2110_AMT_V0[]\n    QTY_service_supplemental_quantity X12_835_5010_X221A1_Detail_2100_2110_QTY_V0[]\n    LQ_healthcare_remark_codes X12_835_5010_X221A1_Detail_2100_2110_LQ_V0[]\n}\n",
    "X12N/835/5010_X221A1/parts/detail/2100/AMT/segment.v0.baml": "class X12_835_5010_X221A1_Detail_2100_AMT_V0 { \n    AMT01_amount_qualifier_code string\n    AMT02_monetary_amount float\n    AMT03_credit_debit_flag_code string?\n}\n",
    "X12N/835/5010_X221A1/parts/detail/2100/CAS/segment.v0.baml": "class X12_835_5010_X221A1_Detail_2100_CAS_V0 { \n    CAS01_claim_adjustment_group_code string\n    CAS02_reason_code string\n    CAS03_adjustment_amount float\n    CAS04_adjustment_quantity float?\n    CAS05_reason_code string?\n    CAS06_adjustment_amount float?\n    CAS07_adjustment_quantity float?\n    CAS08_reason_code string?\n    CAS09_adjustment_amount float?\n    CAS10_adjustment_quantity float?\n    CAS11_reason_code string?\n    CAS12_adjustment_amount float?\n    CAS13_adjustment_quantity float?\n    CAS14_reason_code string?\n    CAS15_adjustment_amount float?\n    CAS16_adjustment_quantity float?\n    CAS17_reason_code string?\n    CAS18_adjustment_amount float?\n    CAS19_adjustment_quantity float?\n}\n",
    "X12N/835/5010_X221A1/parts/detail/2100/CLP/segment.v0.baml": "class X12_835_5010_X221A1_Detail_2100_CLP_V0 {\n    CLP01_claim_submitters_identifier string\n    CLP02_claim_status_code string\n    CLP03_submitted_charges_amount float\n    CLP04_paid_amount float\n    CLP05_patient_responsibility_amount float?\n    CLP06_claim_filing_indicator_code string?\n    CLP07_payer_control_number string?\n    CLP08_facility_code_value string?\n    CLP09_claim_frequency_type_code string?\n    CLP10_patient_status_code string?\n    CLP11_drg_code string?\n    CLP12_drg_weight float?\n    CLP13_discharge_fraction float?\n    CLP14_patient_authorization_to_coordinate_benefits string?\n}\n",
    "X12N/835/5010_X221A1/parts/detail/2100/DTM/segment.v0.baml": "class X12_835_5010_X221A1_Detail_2100_DTM_V0 {\n    DTM01_date_time_qualifier string\n    DTM02_date string?\n    DTM03_time string?\n    DTM04_time_code string?\n    DTM05_date_time_period_format_qualifier string?\n    DTM06_date_time_period string?\n}\n",
    "X12N/835/5010_X221A1/parts/detail/2100/MIA/segment.v0.baml": "class X12_835_5010_X221A1_Detail_2100_MIA_V0 {  \n    MIA01_covered_days float\n    MIA02_pps_operating_outlier_amount float?\n    MIA03_lifetime_psychiatric_days float?\n    MIA04_drg_amount float?\n    MIA05_claim_payment_remark_code string?\n    MIA06_disproportionate_share_amount float?\n    MIA07_msp_pass_through_amount float?\n    MIA08_total_pps_capital_amount float?\n    MIA09_pps_capital_federal_specific_drg_amount float?\n    MIA10_pps_capital_hospital_specific_drg_amount float?\n    MIA11_pps_capital_disproportionate_share_drg_amount float?\n    MIA12_old_capital_amount float?\n    MIA13_pps_capital_indirect_medical_education_claim_amount float?\n    MIA14_hospital_specific_drg_amount float?\n    MIA15_cost_report_days float?\n    MIA16_federal_specific_drg_amount float?\n    MIA17_pps_capital_outlier_amount float?\n    MIA18_indirect_teaching_amount float?\n    MIA19_professional_component_amount_billed_but_not_payable float?\n    MIA20_claim_payment_remark_code_1 string?\n    MIA21_claim_payment_remark_code_2 string?\n    MIA22_claim_payment_remark_code_3 string?\n    MIA23_claim_payment_remark_code_4 string?\n    MIA24_capital_exception_amount float?\n}\n",
    "X12N/835/5010_X221A1/parts/detail/2100/MOA/segment.v0.baml": "class X12_835_5010_X221A1_Detail_2100_MOA_V0 { \n    MOA01_reimbursement_rate float?\n    MOA02_hcpcs_payable_amount float?\n    MOA03_claim_payment_remark_code_1 string?\n    MOA04_claim_payment_remark_code_2 string?\n    MOA05_claim_payment_remark_code_3 string?\n    MOA06_claim_payment_remark_code_4 string?\n    MOA07_claim_payment_remark_code_5 string?\n    MOA08_esrd_payment_amount float?\n    MOA09_professional_component_amount_billed_but_not_payable float?\n}\n",
    "X12N/835/5010_X221A1/parts/detail/2100/NM1/segment.v0.baml": "class X12_835_5010_X221A1_Detail_2100_NM1_V0 {\n    NM101_entity_identifier_code string\n    NM102_entity_type_qualifier string\n    NM103_name_last_or_organization_name string?\n    NM104_name_first string?\n    NM105_name_middle string?\n    NM106_name_prefix string?\n    NM107_name_suffix string?\n    NM108_identification_code_qualifier string?\n    NM109_identification_code string?\n    NM110_entity_relationship_code string?\n    NM111_additional_entity_identifier_code string?\n    NM112_secondary_name_last_or_organization_name string?\n}\n",
    "X12N/835/5010_X221A1/parts/detail/2100/PER/segment.v0.baml": "class X12_835_5010_X221A1_Detail_2100_PER_V0 {\n    PER01_contact_function_code string\n    PER02_name string?\n    PER03_communication_number_qualifier_1 string?\n    PER04_communication_number_1 string?\n    PER05_communication_number_qualifier_2 string?\n    PER06_communication_number_2 string?\n    PER07_communication_number_qualifier_3 string?\n    PER08_communication_number_3 string?\n    PER09_contact_inquiry_reference string?\n}\n",
    "X12N/835/5010_X221A1/parts/detail/2100/QTY/segment.v0.baml": "class X12_835_5010_X221A1_Detail_2100_QTY_C001_V0 {\n    C001_01_unit_or_basis_for_measurement_code string\n    C001_02_exponent float?\n    C001_03_multiplier float?\n    C001_04_unit_or_basis_for_measurement_code string?\n    C001_05_exponent float?\n    C001_06_multiplier float?\n    C001_07_unit_or_basis_for_measurement_code string?\n    C001_08_exponent float?\n    C001_09_multiplier float?\n    C001_10_unit_or_basis_for_measurement_code string?\n    C001_11_exponent float?\n    C001_12_multiplier float?\n    C001_13_unit_or_basis_for_measurement_code string?\n    C001_14_exponent float?\n    C001_15_multiplier float?\n}\n\nclass X12_835_5010_X221A1_Detail_2100_QTY_V0 {  \n    QTY01_quantity_qualifier string\n    QTY02_quantity float?\n    QTY03_composite_unit_of_measure X12_835_5010_X221A1_Detail_2100_QTY_C001_V0?\n    QTY04_free_form_information string?\n}\n",
    "X12N/835/5010_X221A1/parts/detail/2100/REF/segment.v0.baml": "class X12_835_5010_X221A1_Detail_2100_REF_C040_V0 {\n    C040_01_reference_identification_qualifier string\n    C040_02_reference_identification string\n    C040_03_reference_identification_qualifier string?\n    C040_04_reference_identification string?\n    C040_05_reference_identification_qualifier string?\n    C040_06_reference_identification string?\n}\n\nclass X12_835_5010_X221A1_Detail_2100_REF_V0 {  \n    REF01_reference_identification_qualifier string\n    REF02_reference_identification string?\n    REF03_description string?\n    REF04_composite_reference_identifier X12_835_5010_X221A1_Detail_2100_REF_C040_V0?\n}\n",
    "X12N/835/5010_X221A1/parts/detail/2100/loop.v0.baml": "class X12_835_5010_X221A1_Detail_2100_Loop_V0 { \n    CLP_claim_payment_information X12_835_5010_X221A1_Detail_2100_CLP_V0\n    CAS_claim_adjustments X12_835_5010_X221A1_Detail_2100_CAS_V0[]\n    NM1_patient_name X12_835_5010_X221A1_Detail_2100_NM1_V0\n    NM1_insured_name X12_835_5010_X221A1_Detail_2100_NM1_V0?\n    NM1_corrected_patient_or_insured_name X12_835_5010_X221A1_Detail_2100_NM1_V0?\n    NM1_service_provider_name X12_835_5010_X221A1_Detail_2100_NM1_V0?\n    NM1_crossover_carrier_name X12_835_5010_X221A1_Detail_2100_NM1_V0?\n    NM1_corrected_priority_payer_name X12_835_5010_X221A1_Detail_2100_NM1_V0?\n    NM1_other_subscriber_name X12_835_5010_X221A1_Detail_2100_NM1_V0?\n    MIA_inpatient_adjudication_information X12_835_5010_X221A1_Detail_2100_MIA_V0?\n    MOA_outpatient_adjudication_information X12_835_5010_X221A1_Detail_2100_MOA_V0?\n    REF_other_claim_related_identification X12_835_5010_X221A1_Detail_2100_REF_V0[]\n    REF_rendering_provider_identification X12_835_5010_X221A1_Detail_2100_REF_V0[]\n    DTM_statement_from_to_date X12_835_5010_X221A1_Detail_2100_DTM_V0[]\n    DTM_coverage_expiration_date X12_835_5010_X221A1_Detail_2100_DTM_V0?\n    DTM_claim_received_date X12_835_5010_X221A1_Detail_2100_DTM_V0?\n    PER_claim_contact_information X12_835_5010_X221A1_Detail_2100_PER_V0[]\n    AMT_claim_supplemental_information X12_835_5010_X221A1_Detail_2100_AMT_V0[]\n    QTY_claim_supplemental_information_quantity X12_835_5010_X221A1_Detail_2100_QTY_V0[]\n    service_line_loop X12_835_5010_X221A1_Detail_2100_2110_Loop_V0[]\n}\n",
    "X12N/835/5010_X221A1/parts/detail/LX/segment.v0.baml": "class X12_835_5010_X221A1_Detail_LX_V0 {\n    LX01_assigned_number int\n}\n",
    "X12N/835/5010_X221A1/parts/detail/TS2/segment.v0.baml": "class X12_835_5010_X221A1_Detail_TS2_V0 { \n    TS201_total_drg_amount float?\n    TS202_total_federal_specific_amount float?\n    TS203_total_hospital_specific_amount float?\n    TS204_total_disproportionate_share_amount float?\n    TS205_total_capital_amount float?\n    TS206_total_indirect_medical_education_amount float?\n    TS207_total_outlier_days float?\n    TS208_total_day_outlier_amount float?\n    TS209_total_cost_outlier_amount float?\n    TS210_drg_average_length_of_stay float?\n    TS211_total_discharges float?\n    TS212_total_cost_report_days float?\n    TS213_total_covered_days float?\n    TS214_total_non_covered_days float?\n    TS215_total_msp_pass_through_amount float?\n    TS216_average_drg_weight float?\n    TS217_total_pps_capital_federal_specific_drg_amount float?\n    TS218_total_pps_capital_hospital_specific_drg_amount float?\n    TS219_total_pps_disproportionate_share_drg_amount float?\n}\n",
    "X12N/835/5010_X221A1/parts/detail/TS3/segment.v0.baml": "class X12_835_5010_X221A1_Detail_TS3_V0 {  \n    TS301_reference_identification string\n    TS302_facility_code_value string\n    TS303_date string\n    TS304_quantity float\n    TS305_total_reported_charges float\n    TS306_total_covered_charges float?\n    TS307_total_noncovered_charges float?\n    TS308_total_denied_charges float?\n    TS309_total_provider_payment float?\n    TS310_total_interest_paid float?\n    TS311_total_contractual_adjustment float?\n    TS312_total_gramm_rudman_reduction float?\n    TS313_total_medicare_secondary_payer_primary_payer_amount float?\n    TS314_total_blood_deductible_amount float?\n    TS315_total_non_lab_charges float?\n    TS316_total_coinsurance_amount float?\n    TS317_hcpcs_reported_charges float?\n    TS318_hcpcs_payable_amount float?\n    TS319_total_deductible_amount float?\n    TS320_total_professional_component_amount float?\n    TS321_total_msp_patient_liability_met float?\n    TS322_total_patient_reimbursement float?\n    TS323_total_pip_number_of_claims float?\n    TS324_total_pip_adjustment float?\n}\n",
    "X12N/835/5010_X221A1/parts/detail/loop.v0.baml": "class X12_835_5010_X221A1_Detail_Loop_V0 {  \n    LX_header_number X12_835_5010_X221A1_Detail_LX_V0\n    TS3_provider_summary_information X12_835_5010_X221A1_Detail_TS3_V0?\n    TS2_provider_supplemental_summary_information X12_835_5010_X221A1_Detail_TS2_V0?\n    claim_level_loop X12_835_5010_X221A1_Detail_2100_Loop_V0[]\n}\n",
    "X12N/835/5010_X221A1/parts/heading/1000A/N1/segment.v0.baml": "class X12_835_5010_X221A1_Heading_1000A_N1_V0 {   \n    N101_entity_identifier_code string\n    N102_name string?\n    N103_identification_code_qualifier string?\n    N104_identification_code string?\n    N105_entity_relationship_code string?\n    N106_entity_identifier_code string?\n}\n",
    "X12N/835/5010_X221A1/parts/heading/1000A/N3/segment.v0.baml": "class X12_835_5010_X221A1_Heading_1000A_N3_V0 {  \n    N301_address_information string\n    N302_address_information string?\n}\n",
    "X12N/835/5010_X221A1/parts/heading/1000A/N4/segment.v0.baml": "class X12_835_5010_X221A1_Heading_1000A_N4_V0 {\n    N401_city_name string?\n    N402_state_or_province_code string?\n    N403_postal_code string?\n    N404_country_code string?\n    N405_location_qualifier string?\n    N406_location_identifier string?\n    N407_country_subdivision_code string?\n}\n",
    "X12N/835/5010_X221A1/parts/heading/1000A/PER/segment.v0.baml": "class X12_835_5010_X221A1_Heading_1000A_PER_V0 {\n    PER01_contact_function_code string\n    PER02_name string?\n    PER03_communication_number_qualifier_1 string?\n    PER04_communication_number_1 string?\n    PER05_communication_number_qualifier_2 string?\n    PER06_communication_number_2 string?\n    PER07_communication_number_qualifier_3 string?\n    PER08_communication_number_3 string?\n    PER09_contact_inquiry_reference string?\n}\n",
    "X12N/835/5010_X221A1/parts/heading/1000A/REF/segment.v0.baml": "class X12_835_5010_X221A1_Heading_1000A_REF_C040_V0 {\n    C040_01_reference_identification_qualifier string\n    C040_02_reference_identification string\n    C040_03_reference_identification_qualifier string?\n    C040_04_reference_identification string?\n    C040_05_reference_identification_qualifier string?\n    C040_06_reference_identification string?\n}\n\nclass X12_835_5010_X221A1_Heading_1000A_REF_V0 { \n    REF01_reference_identification_qualifier string\n    REF02_reference_identification string?\n    REF03_description string?\n    REF04_composite_reference_identifier X12_835_5010_X221A1_Heading_1000A_REF_C040_V0?\n}\n",
    "X12N/835/5010_X221A1/parts/heading/1000A/loop.v0.baml": "class X12_835_5010_X221A1_Heading_1000A_Loop_V0 {  \n    N1_payer_identification X12_835_5010_X221A1_Heading_1000A_N1_V0\n    N3_payer_address X12_835_5010_X221A1_Heading_1000A_N3_V0\n    N4_payer_city_state_zip_code X12_835_5010_X221A1_Heading_1000A_N4_V0\n    REF_additional_payer_identification X12_835_5010_X221A1_Heading_1000A_REF_V0[]\n    PER_payer_business_contact_information X12_835_5010_X221A1_Heading_1000A_PER_V0?\n    PER_payer_technical_contact_information X12_835_5010_X221A1_Heading_1000A_PER_V0[]\n    PER_payer_web_site X12_835_5010_X221A1_Heading_1000A_PER_V0?\n}\n",
    "X12N/835/5010_X221A1/parts/heading/1000B/N1/segment.v0.baml": "class X12_835_5010_X221A1_Heading_1000B_N1_V0 {  \n    N101_entity_identifier_code string\n    N102_name string?\n    N103_identification_code_qualifier string?\n    N104_identification_code string?\n    N105_entity_relationship_code string?\n    N106_entity_identifier_code string?\n}\n",
    "X12N/835/5010_X221A1/parts/heading/1000B/N3/segment.v0.baml": "class X12_835_5010_X221A1_Heading_1000B_N3_V0 {  \n    N301_address_information string\n    N302_address_information string?\n}\n",
    "X12N/835/5010_X221A1/parts/heading/1000B/N4/segment.v0.baml": "class X12_835_5010_X221A1_Heading_1000B_N4_V0 {  \n    N401_city_name string?\n    N402_state_or_province_code string?\n    N403_postal_code string?\n    N404_country_code string?\n    N405_location_qualifier string?\n    N406_location_identifier string?\n    N407_country_subdivision_code string?\n}\n",
    "X12N/835/5010_X221A1/parts/heading/1000B/RDM/segment.v0.baml": "class X12_835_5010_X221A1_Heading_1000B_RDM_V0 {   \n    RDM01_report_transmission_code string\n    RDM02_name string?\n    RDM03_communication_number string?\n    RDM04_composite_reference_identifier X12_835_5010_X221A1_Heading_1000B_RDM_C040_V0?\n    RDM05_composite_reference_identifier X12_835_5010_X221A1_Heading_1000B_RDM_C040_V0?\n}\n\nclass X12_835_5010_X221A1_Heading_1000B_RDM_C040_V0 { \n    C040_01_reference_identification_qualifier string\n    C040_02_reference_identification string\n    C040_03_reference_identification_qualifier string?\n    C040_04_reference_identification string?\n    C040_05_reference_identification_qualifier string?\n    C040_06_reference_identification string?\n}\n",
    "X12N/835/5010_X221A1/parts/heading/1000B/REF/segment.v0.baml": "class X12_835_5010_X221A1_Heading_1000B_REF_V0 {   \n    REF01_reference_identification_qualifier string\n    REF02_reference_identification string?\n    REF03_description string?\n    REF04_composite_reference_identifier X12_835_5010_X221A1_Heading_1000B_REF_C040_V0?\n}\n\nclass X12_835_5010_X221A1_Heading_1000B_REF_C040_V0 {\n    C040_01_reference_identification_qualifier string\n    C040_02_reference_identification string\n    C040_03_reference_identification_qualifier string?\n    C040_04_reference_identification string?\n    C040_05_reference_identification_qualifier string?\n    C040_06_reference_identification string?\n}\n",
    "X12N/835/5010_X221A1/parts/heading/1000B/loop.v0.baml": "class X12_835_5010_X221A1_Heading_1000B_Loop_V0 {  \n    N1_payee_identification X12_835_5010_X221A1_Heading_1000B_N1_V0\n    N3_payee_address X12_835_5010_X221A1_Heading_1000B_N3_V0?\n    N4_payee_city_state_zip_code X12_835_5010_X221A1_Heading_1000B_N4_V0?\n    REF_payee_additional_identification X12_835_5010_X221A1_Heading_1000B_REF_V0[]\n    RDM_remittance_delivery_method X12_835_5010_X221A1_Heading_1000B_RDM_V0?\n}\n",
    "X12N/835/5010_X221A1/parts/heading/BPR/segment.v0.baml": "class X12_835_5010_X221A1_Heading_BPR_V0 {   \n    BPR01_transaction_handling_code string\n    BPR02_monetary_amount float\n    BPR03_credit_debit_flag_code string\n    BPR04_payment_method_code string\n    BPR05_payment_format_code string?\n    BPR06_dfi_id_number_qualifier string?\n    BPR07_dfi_identification_number string?\n    BPR08_account_number_qualifier string?\n    BPR09_account_number string?\n    BPR10_originating_company_identifier string?\n    BPR11_originating_company_supplemental_code string?\n    BPR12_dfi_id_number_qualifier_receiver string?\n    BPR13_dfi_identification_number_receiver string?\n    BPR14_account_number_qualifier_receiver string?\n    BPR15_account_number_receiver string?\n    BPR16_date string?\n    BPR17_business_function_code string?\n    BPR18_dfi_id_number_qualifier_return string?\n    BPR19_dfi_identification_number_return string?\n    BPR20_account_number_qualifier_return string?\n    BPR21_account_number_return string?\n}\n",
    "X12N/835/5010_X221A1/parts/heading/CUR/segment.v0.baml": "class X12_835_5010_X221A1_Heading_CUR_V0 {  \n    CUR01_entity_identifier_code string\n    CUR02_currency_code string\n    CUR03_exchange_rate float?\n    CUR04_entity_identifier_code string?\n    CUR05_secondary_currency_code string?\n    CUR06_currency_market_exchange_code string?\n    CUR07_date_time_qualifier string?\n    CUR08_date string?\n    CUR09_time string?\n    CUR10_secondary_date_time_qualifier string?\n    CUR11_secondary_date string?\n    CUR12_secondary_time string?\n    CUR13_additional_date_time_qualifier string?\n    CUR14_additional_date string?\n    CUR15_additional_time string?\n    CUR16_final_date_time_qualifier string?\n    CUR17_final_date string?\n    CUR18_final_time string?\n    CUR19_last_date_time_qualifier string?\n    CUR20_last_date string?\n    CUR21_last_time string?\n}\n",
    "X12N/835/5010_X221A1/parts/heading/DTM/segment.v0.baml": "class X12_835_5010_X221A1_Heading_DTM_V0 {   \n    DTM01_date_time_qualifier string\n    DTM02_date string?\n    DTM03_time string?\n    DTM04_time_code string?\n    DTM05_date_time_period_format_qualifier string?\n    DTM06_date_time_period string?\n}\n",
    "X12N/835/5010_X221A1/parts/heading/REF/segment.v0.baml": "class X12_835_5010_X221A1_Heading_REF_V0 {  \n    REF01_reference_id_qualifier string\n    REF02_reference_id string?\n    REF03_description string?\n    REF04_composite_reference_identifier X12_835_5010_X221A1_Heading_REF_C040_V0?\n}\n\nclass X12_835_5010_X221A1_Heading_REF_C040_V0 {\n    C040_01_reference_id_qualifier string\n    C040_02_reference_id string\n    C040_03_secondary_reference_id_qualifier string?\n    C040_04_secondary_reference_id string?\n    C040_05_tertiary_reference_id_qualifier string?\n    C040_06_tertiary_reference_id string?\n}\n",
    "X12N/835/5010_X221A1/parts/heading/ST/segment.v0.baml": "class X12_835_5010_X221A1_Heading_ST_V0 {  \n    ST01_transaction_set_identifier_code string\n    ST02_transaction_set_control_number string\n    ST03_implementation_convention_reference string?\n}\n",
    "X12N/835/5010_X221A1/parts/heading/TRN/segment.v0.baml": "class X12_835_5010_X221A1_Heading_TRN_V0 {  \n    TRN01_trace_type_code string\n    TRN02_reference_identification string\n    TRN03_originating_company_identifier string?\n    TRN04_reference_identification string?\n}\n",
    "X12N/835/5010_X221A1/parts/heading/main.v0.baml": "class X12_835_5010_X221A1_Heading {   \n    ST_transaction_set_header X12_835_5010_X221A1_Heading_ST_V0\n    BPR_financial_information X12_835_5010_X221A1_Heading_BPR_V0\n    TRN_reassociation_trace_number X12_835_5010_X221A1_Heading_TRN_V0?\n    CUR_currency X12_835_5010_X221A1_Heading_CUR_V0?\n    REF_receiver_identification X12_835_5010_X221A1_Heading_REF_V0?\n    REF_version_identification X12_835_5010_X221A1_Heading_REF_V0?\n    DTM_production_date X12_835_5010_X221A1_Heading_DTM_V0?\n    payer_identification_loop X12_835_5010_X221A1_Heading_1000A_Loop_V0[]\n    payee_identification_loop X12_835_5010_X221A1_Heading_1000B_Loop_V0[]\n}\n",
    "X12N/835/5010_X221A1/parts/summary/PLB/segment.v0.baml": "class X12_835_5010_X221A1_Summary_PLB_V0 {  \n    PLB01_provider_identifier string\n    PLB02_fiscal_period_date string\n    PLB03_adjustment_identifier X12_835_5010_X221A1_Summary_PLB_C042_V0\n    PLB04_adjustment_amount float\n    PLB05_adjustment_identifier X12_835_5010_X221A1_Summary_PLB_C042_V0?\n    PLB06_adjustment_amount float?\n    PLB07_adjustment_identifier X12_835_5010_X221A1_Summary_PLB_C042_V0?\n    PLB08_adjustment_amount float?\n    PLB09_adjustment_identifier X12_835_5010_X221A1_Summary_PLB_C042_V0?\n    PLB10_adjustment_amount float?\n    PLB11_adjustment_identifier X12_835_5010_X221A1_Summary_PLB_C042_V0?\n    PLB12_adjustment_amount float?\n    PLB13_adjustment_identifier X12_835_5010_X221A1_Summary_PLB_C042_V0?\n    PLB14_adjustment_amount float?\n}\n\nclass X12_835_5010_X221A1_Summary_PLB_C042_V0 {\n    adjustment_reason_code string\n    reference_identification string?\n}\n\n",
    "X12N/835/5010_X221A1/parts/summary/SE/segment.v0.baml": "class X12_835_5010_X221A1_Summary_SE_V0 {   \n    SE01_number_of_included_segments int\n    SE02_transaction_set_control_number string\n}\n",
    "X12N/835/5010_X221A1/parts/summary/main.v0.baml": "class X12_835_5010_X221A1_Summary_V0 {   \n    PLB_provider_adjustments X12_835_5010_X221A1_Summary_PLB_V0[]\n    SE_transaction_set_trailer X12_835_5010_X221A1_Summary_SE_V0\n}\n",
    "X12N/835/5010_X221A1/tests/extractor/test_claim_specific_negotiated_discount.baml": "test Test_X12_835_5010_X221A1_ClaimAdjustmentReasonCode45 {\n  functions [X12_835_5010_X221A1_Extractor]\n  args {\n    params {\n        body #\"\n          ISA*00*          *00*          *ZZ*ABCPAYER       *ZZ*ABCPAYER       *190827*0212*^*00501*191511902*0*P*>~\n          GS*HP*ABCD*ABCD*20190827*12345678*12345678*X*005010X221A1~\n          ST*835*10060875~\n          BPR*I*80.00*C*CHK************20190816~\n          TRN*1*CK NUMBER 1*1234567890~\n          REF*EV*FAC~\n          DTM*405*20190827~\n          N1*PR*ANY PLAN USA~\n          N3*1 WALK THIS WAY~\n          N4*ANYCITY*OH*45209~\n          PER*CX**TE*8661112222~\n          PER*BL*EDI*TE*8002223333*EM*EDI.SUPPORT@ANYPAYER.COM~\n          PER*IC**UR*WWW.ANYPAYER.COM~\n          N1*PE*PROVIDER*XX*1123454567~\n          N3*2255 ANY ROAD~\n          N4*ANY CITY*CA*12211~\n          REF*TJ*123456789~\n          LX*1~\n          CLP*PATACCT*1*400*80**MC*CLAIMNUMBER*11*1~\n          NM1*QC*1*DOE*JOHN*N***MI*ABC123456789~\n          REF*1L*12345F~\n          DTM*050*20190209~\n          PER*CX*G CUSTOMER SERVICE DEPARTMENT*TE*8004074627~\n          AMT*AU*150~\n          SVC*HC>99213*150*80**1~\n          DTM*472*20190101~\n          CAS*CO*45*70~\n          AMT*B6*80~\n          SVC*HC>85003*100*0**1~\n          DTM*472*20190101~\n          CAS*CO*204*100~\n          SVC*HC>36415*150*0**1~\n          DTM*472*20190101~\n          CAS*CO*97*150~\n          SE*33*10060875~\n          GE*1*12345678~\n          IEA*1*191511902~\n        \"#\n    }\n  }\n}\n",
    "X12N/835/5010_X221A1/tests/extractor/test_incorrect_subscriber_as_patient_and_incorrect_id.baml": "test Test_X12_835_5010_X221A1_IncorrectSubscriberNameAndID {\n  functions [X12_835_5010_X221A1_Extractor]\n  args {\n    params {\n        body #\"\n          ISA*00*          *00*          *ZZ*ABCPAYER       *ZZ*ABCPAYER       *190827*0212*^*00501*191511902*0*P*|~\n          GS*HP*ABCD*ABCD*20190827*12345678*12345678*X*005010X221A1~\n          ST*835*10060875~\n          BPR*I*35.06*C*CHK************20190816~\n          TRN*1*CK NUMBER 1*1234567890~\n          REF*EV*FAC~\n          DTM*405*20190827~\n          N1*PR*ANY PLAN USA~\n          N3*1 WALK THIS WAY~\n          N4*ANYCITY*OH*45209~\n          PER*CX**TE*8661112222~\n          PER*BL*EDI*TE*8002223333*EM*EDI.SUPPORT@ANYPAYER.COM~\n          PER*IC**UR*WWW.ANYPAYER.COM~\n          N1*PE*PROVIDER*XX*1123454567~\n          N3*2255 ANY ROAD~\n          N4*ANY CITY*CA*12211~\n          REF*TJ*123456789~\n          LX*1~\n          CLP*02333TLC222222*1*115*35.06*35*13*8333333214*11*1~\n          NM1*QC*1*KEATON*ALEX*P***MI*80000006006~\n          NM1*IL*1*THOMAS*JASON****MI*80000006006~\n          NM1*74*1**JEROME****C*80000006001~\n          NM1*82*1*BLOOD MD*RED N****XX*1888888886~\n          REF*1L*28~\n          REF*CE*OAPOS-LAOA~\n          DTM*232*20191113~\n          DTM*233*20191113~\n          DTM*050*20191119~\n          AMT*AU*115~\n          SVC*HC|99213*115*35.06**1~\n          DTM*472*20191113~\n          CAS*CO*45*44.94~\n          CAS*PR*3*35~\n          REF*LU*11~\n          REF*6R*22261389~\n          AMT*B6*70.06~\n          SE*35*10060875~\n          GE*1*12345678~\n          IEA*1*191511902~\n        \"#\n    }\n  }\n}\n",
    "X12N/835/5010_X221A1/tests/extractor/test_line_service_bonuses_impacting_payment_only.baml": "test Test_X12_835_5010_X221A1_LineServiceBonusesImpactingPaymentOnly {\n  functions [X12_835_5010_X221A1_Extractor]\n  args {\n    params {\n        body #\"\n          ISA*00*          *00*          *ZZ*ABCPAYER       *ZZ*ABCPAYER       *190827*0212*^*00501*191511902*0*P*>~\n          GS*HP*ABCD*ABCD*20190827*12345678*12345678*X*005010X221A1~\n          ST*835*10060875~\n          BPR*I*12.00*C*CHK************20190816~\n          TRN*1*CK NUMBER 1*1234567890~\n          REF*EV*FAC~\n          DTM*405*20190827~\n          N1*PR*ANY PLAN USA~\n          N3*1 WALK THIS WAY~\n          N4*ANYCITY*OH*45209~\n          PER*CX**TE*8661112222~\n          PER*BL*EDI*TE*8002223333*EM*EDI.SUPPORT@ANYPAYER.COM~\n          PER*IC**UR*WWW.ANYPAYER.COM~\n          N1*PE*PROVIDER*XX*1123454567~\n          N3*2255 ANY ROAD~\n          N4*ANY CITY*CA*12211~\n          REF*TJ*123456789~\n          LX*1~\n          CLP*PCN*1*25*12*10*12*CLAIMNUMB*11*1~\n          NM1*QC*1*LAST*FIRST*J***MI*123456789~\n          NM1*82*1******XX*1447481825~\n          MOA***N25~\n          REF*1L*102345~\n          REF*EA*065789~\n          DTM*050*20170113~\n          AMT*AU*25~\n          SVC*HC>99214*25*12~\n          DTM*472*20170109~\n          CAS*CO*45*5**161*-2~\n          CAS*PR*3*10~\n          REF*6R*123~\n          AMT*B6*20~\n          SE*31*10060875~\n          GE*1*12345678~\n          IEA*1*191511902~\n        \"#\n    }\n  }\n}\n",
    "X12N/835/5010_X221A1/tests/extractor/test_line_service_penalty_impacting_payment_only.baml": "\ntest Test_X12_835_5010_X221A1_LineServicePenaltyImpactingPaymentOnly {\n  functions [X12_835_5010_X221A1_Extractor]\n  args {\n    params {\n        body #\"\n          ISA*00*          *00*          *ZZ*ABCPAYER       *ZZ*ABCPAYER       *190827*0212*^*00501*191511902*0*P*>~\n          GS*HP*ABCD*ABCD*20190827*12345678*12345678*X*005010X221A1~\n          ST*835*10060875~\n          BPR*I*8.00*C*CHK************20190816~\n          TRN*1*CK NUMBER 1*1234567890~\n          REF*EV*FAC~\n          DTM*405*20190827~\n          N1*PR*ANY PLAN USA~\n          N3*1 WALK THIS WAY~\n          N4*ANYCITY*OH*45209~\n          PER*CX**TE*8661112222~\n          PER*BL*EDI*TE*8002223333*EM*EDI.SUPPORT@ANYPAYER.COM~\n          PER*IC**UR*WWW.ANYPAYER.COM~\n          N1*PE*PROVIDER*XX*1123454567~\n          N3*2255 ANY ROAD~\n          N4*ANY CITY*CA*12211~\n          REF*TJ*123456789~\n          LX*1~\n          CLP*PCN*1*25*8*10*12*CLAIMNUMB*11*1~\n          NM1*QC*1*LAST*FIRST*J***MI*123456789~\n          NM1*82*1******XX*1447481825~\n          MOA***N25~\n          REF*1L*102345~\n          REF*EA*065789~\n          DTM*050*20170113~\n          AMT*AU*25~\n          SVC*HC>99214*25*8~\n          DTM*472*20170109~\n          CAS*CO*45*5**B4*2~\n          CAS*PR*3*10~\n          REF*6R*123~\n          AMT*B6*20~\n          SE*31*10060875~\n          GE*1*12345678~\n          IEA*1*191511902~\n        \"#\n    }\n  }\n}\n",
    "X12N/835/5010_X221A1/tests/extractor/test_line_service_tax_impacting_payment_only.baml": "test Test_X12_835_5010_X221A1_LineServiceTaxImpactingPaymentOnly {\n  functions [X12_835_5010_X221A1_Extractor]\n  args {\n    params {\n        body #\"\n          ISA*00*          *00*          *ZZ*ABCPAYER       *ZZ*ABCPAYER       *190827*0212*^*00501*191511902*0*P*>~\n          GS*HP*ABCD*ABCD*20190827*12345678*12345678*X*005010X221A1~\n          ST*835*10060875~\n          BPR*I*12.00*C*CHK************20190816~\n          TRN*1*CK NUMBER 1*1234567890~\n          REF*EV*FAC~\n          DTM*405*20190827~\n          N1*PR*ANY PLAN USA~\n          N3*1 WALK THIS WAY~\n          N4*ANYCITY*OH*45209~\n          PER*CX**TE*8661112222~\n          PER*BL*EDI*TE*8002223333*EM*EDI.SUPPORT@ANYPAYER.COM~\n          PER*IC**UR*WWW.ANYPAYER.COM~\n          N1*PE*PROVIDER*XX*1123454567~\n          N3*2255 ANY ROAD~\n          N4*ANY CITY*CA*12211~\n          REF*TJ*123456789~\n          LX*1~\n          CLP*PCN*1*25*12*10*12*CLAIMNUMB*11*1~\n          NM1*QC*1*LAST*FIRST*J***MI*123456789~\n          NM1*82*1******XX*1447481825~\n          MOA***N25~\n          REF*1L*102345~\n          REF*EA*065789~\n          DTM*050*20170113~\n          AMT*AU*25~\n          SVC*HC>99214*25*12~\n          DTM*472*20170109~\n          CAS*CO*45*5**161*-2~\n          CAS*PR*3*10~\n          REF*6R*123~\n          AMT*B6*20~\n          SE*31*10060875~\n          GE*1*12345678~\n          IEA*1*191511902~\n        \"#\n    }\n  }\n}\n",
    "X12N/835/5010_X221A1/tests/extractor/test_minimal_transaction.baml": "test Test_X12_835_5010_X221A1_MinimalTransaction {\n  functions [X12_835_5010_X221A1_Extractor]\n  args {\n    params {\n        body #\"\n          ISA*00*          *00*          *ZZ*SENDERID       *ZZ*RECEIVERID     *230101*1200*^*00501*000000001*0*P*>~\n          GS*HP*SENDERID*RECEIVERID*20230101*1200*1*X*005010X221A1~\n          ST*835*0001~\n          BPR*I*1500.50*C*CHK************20230101~\n          TRN*1*1234567890*987654321~\n          SE*5*0001~\n          GE*1*1~\n          IEA*1*000000001~\n        \"#\n    }\n  }\n}\n",
    "X12N/835/5010_X221A1/tests/extractor/test_missing_address_and_location.baml": "test Test_X12_835_5010_X221A1_MissingAddressAndLocation {\n  functions [X12_835_5010_X221A1_Extractor]\n  args {\n    params {\n        body #\"\n          ISA*00*          *00*          *ZZ*SENDERID       *ZZ*RECEIVERID     *230101*1200*^*00501*000000003*0*P*>~\n          GS*HP*SENDERID*RECEIVERID*20230101*1200*3*X*005010X221A1~\n          ST*835*0003~\n          BPR*I*100.00*C*CHK************20230101~\n          TRN*1*123456789*987654321~\n          REF*TJ*PROVIDERID~\n          N1*PE*PROVIDER NAME*XX*987654321~\n          LX*1~\n          CLP*CLAIM456*2*200.00*150.00*50.00**~\n          NM1*QC*1*SMITH*JANE****MI*123456789~\n          SVC*HC>99214*200.00*150.00~\n          CAS*PR*1*50.00~\n          DTM*472*20230101~\n          SE*12*0003~\n          GE*1*3~\n          IEA*1*000000003~\n        \"#\n    }\n  }\n}\n",
    "X12N/835/5010_X221A1/tests/extractor/test_missing_monetary_amounts.baml": "test Test_X12_835_5010_X221A1_MissingMonetaryAmounts {\n  functions [X12_835_5010_X221A1_Extractor]\n  args {\n    params {\n        body #\"\n          ISA*00*          *00*          *ZZ*SENDERID       *ZZ*RECEIVERID     *230101*1200*^*00501*000000002*0*P*>~\n          GS*HP*SENDERID*RECEIVERID*20230101*1200*2*X*005010X221A1~\n          ST*835*0002~\n          BPR*I*200.00*C*ACH************20230101~\n          TRN*1*987654321*123456789~\n          REF*EV*FACILITYID~\n          N1*PR*PAYER NAME*FI*123456789~\n          N3*123 MAIN STREET~\n          N4*ANYTOWN*CA*12345~\n          LX*1~\n          CLP*CLAIM123*1*100.00*80.00*20.00**~\n          NM1*QC*1*DOE*JOHN****MI*987654321~\n          SVC*HC>99213*100.00*80.00~\n          CAS*CO*45*20.00~\n          DTM*472*20221231~\n          SE*13*0002~\n          GE*1*2~\n          IEA*1*000000002~\n        \"#\n    }\n  }\n}\n",
    "X12N/835/5010_X221A1/tests/extractor/test_multiple_claims_single_check.baml": "test Test_X12_835_5010_X221A1_MultipleClaimsSingleCheck {\n  functions [X12_835_5010_X221A1_Extractor]\n  args {\n    params {\n        body #\"\n          ISA*00*          *00*          *ZZ*ABCPAYER       *ZZ*ABCPAYER       *190827*0212*^*00501*191511902*0*P*>~\n          GS*HP*ABCD*ABCD*20190827*12345678*12345678*X*005010X221A1~\n          ST*835*35681~\n          BPR*I*810.8*C*CHK************20190331~\n          TRN*1*12345*1512345678~\n          REF*EV*XYZ CLEARINGHOUSE~\n          N1*PR*DENTAL OF ABC~\n          N3*225 MAIN STREET~\n          N4*CENTERVILLE*PA*17111~\n          PER*BL*JANE DOE*TE*9005555555~\n          N1*PE*BAN DDS LLC*XX*9999947036~\n          REF*TJ*212121212~\n          LX*1~\n          CLP*7722337*1*226*132**12*119932404007801*11*1~\n          NM1*QC*1*DOE*SANDY****MI*SJD11112~\n          NM1*82*1*BAN*ERIN****XX*1811901945~\n          AMT*AU*132~\n          SVC*AD>D0120*46*25~\n          DTM*472*20190324~\n          CAS*CO*45*21~\n          AMT*B6*25~\n          SVC*AD>D0220*25*14~\n          DTM*472*20190324~\n          CAS*CO*45*11~\n          AMT*B6*14~\n          SVC*AD>D0230*22*10~\n          DTM*472*20190324~\n          CAS*CO*45*12~\n          AMT*B6*10~\n          SVC*AD>D0274*60*34~\n          DTM*472*20190324~\n          CAS*CO*45*26~\n          AMT*B6*34~\n          SVC*AD>D1110*73*49~\n          DTM*472*20190324~\n          CAS*CO*45*24~\n          AMT*B6*49~\n          CLP*7722337*1*119*74**12*119932404007801*11*1~\n          NM1*QC*1*DOE*SALLY****MI*SJD11111~\n          NM1*IL*1*DOE*JOHN****MI*SJD11111~\n          NM1*82*1*BAN*ERIN****XX*1811901945~\n          AMT*AU*74~\n          SVC*AD>D0120*46*25~\n          DTM*472*20190324~\n          CAS*CO*45*21~\n          AMT*B6*25~\n          SVC*AD>D1110*73*49~\n          DTM*472*20190324~\n          CAS*CO*45*24~\n          AMT*B6*49~\n          CLP*7722337*1*226*108*24*12*119932404007801*11*1~\n          NM1*QC*1*SMITH*SALLY****MI*SJD11113~\n          NM1*82*1*BAN*ERIN****XX*1811901945~\n          AMT*AU*132~\n          SVC*AD>D0120*46*25~\n          DTM*472*20190324~\n          CAS*CO*45*21~\n          AMT*B6*25~\n          SVC*AD>D0220*25*0~\n          DTM*472*20190324~\n          CAS*PR*3*14~\n          CAS*CO*45*11~\n          AMT*B6*14~\n          SVC*AD>D0230*22*0~\n          DTM*472*20190324~\n          CAS*PR*3*10~\n          CAS*CO*45*12~\n          AMT*B6*10~\n          SVC*AD>D0274*60*34~\n          DTM*472*20190324~\n          CAS*CO*45*26~\n          AMT*B6*34~\n          SVC*AD>D1110*73*49~\n          DTM*472*20190324~\n          CAS*CO*45*24~\n          AMT*B6*49~\n          CLP*7722337*1*1145*14*902*12*119932404007801*11*1~\n          NM1*QC*1*SMITH*SAM****MI*SJD11116~\n          NM1*82*1*BAN*ERIN****XX*1811901945~\n          AMT*AU*14~\n          SVC*AD>D0220*25*14~\n          DTM*472*20190324~\n          CAS*CO*45*11~\n          AMT*B6*14~\n          SVC*AD>D2790*940*0~\n          DTM*472*20190324~\n          CAS*PR*3*756~\n          CAS*CO*45*184~\n          SVC*AD>D2950*180*0~\n          DTM*472*20190324~\n          CAS*PR*3*146~\n          CAS*CO*45*34~\n          CLP*7722337*1*348*16.8*44.2*12*119932404007801*11*1~\n          NM1*QC*1*JONES*SAM****MI*SJD11122~\n          NM1*82*1*BAN*ERIN****XX*1811901945~\n          AMT*AU*28~\n          SVC*AD>D4342*125*0~\n          DTM*472*20190313~\n          CAS*CO*45*125~\n          SVC*AD>D4381*43*0~\n          DTM*472*20190313~\n          CAS*PR*3*33~\n          CAS*CO*45*10~\n          SVC*AD>D2950*180*16.8~\n          DTM*472*20190313~\n          CAS*PR*3*11.2~\n          CAS*CO*45*152~\n          AMT*B6*28~\n          CLP*7722337*1*226*132**12*119932404007801*11*1~\n          NM1*QC*1*JONES*SALLY****MI*SJD11133~\n          NM1*82*1*BAN*ERIN****XX*1811901945~\n          AMT*AU*132~\n          SVC*AD>D0120*46*25~\n          DTM*472*20190321~\n          CAS*CO*45*21~\n          AMT*B6*25~\n          SVC*AD>D0220*25*14~\n          DTM*472*20190321~\n          CAS*CO*45*11~\n          AMT*B6*14~\n          SVC*AD>D0230*22*10~\n          DTM*472*20190321~\n          CAS*CO*45*12~\n          AMT*B6*10~\n          SVC*AD>D0274*60*34~\n          DTM*472*20190321~\n          CAS*CO*45*26~\n          AMT*B6*34~\n          SVC*AD>D1110*73*49~\n          DTM*472*20190321~\n          CAS*CO*45*24~\n          AMT*B6*49~\n          CLP*7722337*1*179*108**12*119932404007801*11*1~\n          NM1*QC*1*DOE*SAM****MI*SJD99999~\n          NM1*82*1*BAN*ERIN****XX*1811901945~\n          AMT*AU*108~\n          SVC*AD>D0120*46*25~\n          DTM*472*20190324~\n          CAS*CO*45*21~\n          AMT*B6*25~\n          SVC*AD>D0274*60*34~\n          DTM*472*20190324~\n          CAS*CO*45*26~\n          AMT*B6*34~\n          SVC*AD>D1110*73*49~\n          DTM*472*20190324~\n          CAS*CO*45*24~\n          AMT*B6*49~\n          CLP*7722337*1*129*82**12*119932404007801*11*1~\n          NM1*QC*1*DOE*SUE****MI*SJD88888~\n          NM1*82*1*BAN*ERIN****XX*1811901945~\n          AMT*AU*82~\n          SVC*AD>D0120*46*25~\n          DTM*472*20190324~\n          CAS*CO*45*21~\n          AMT*B6*25~\n          SVC*AD>D1120*54*37~\n          DTM*472*20190324~\n          CAS*CO*45*17~\n          AMT*B6*37~\n          SVC*AD>D1208*29*20~\n          DTM*472*20190324~\n          CAS*CO*45*9~\n          AMT*B6*20~\n          CLP*7722337*1*221*144**12*119932404007801*11*1~\n          NM1*QC*1*DOE*DONNA****MI*SJD77777~\n          NM1*82*1*BAN*ERIN****XX*1811901945~\n          AMT*AU*144~\n          SVC*AD>D0120*46*25~\n          DTM*472*20190324~\n          CAS*CO*45*21~\n          AMT*B6*25~\n          SVC*AD>D0330*92*62~\n          DTM*472*20190324~\n          CAS*CO*45*30~\n          AMT*B6*62~\n          SVC*AD>D1120*54*37~\n          DTM*472*20190324~\n          CAS*CO*45*17~\n          AMT*B6*37~\n          SVC*AD>D1208*29*20~\n          DTM*472*20190324~\n          CAS*CO*45*9~\n          AMT*B6*20~\n          SE*183*35681~\n          GE*1*12345678~\n          IEA*1*191511902~\n        \"#\n    }\n  }\n}\n",
    "X12N/835/5010_X221A1/tests/extractor/test_not_covered_not_authorizedInpatient_facility_claim_days.baml": "test Test_X12_835_5010_X221A1_NotCoveredNotAuthorizedInpatientFacilityClaimDays {\n  functions [X12_835_5010_X221A1_Extractor]\n  args {\n    params {\n        body #\"\n          ISA*00*          *00*          *ZZ*ABCPAYER       *ZZ*ABCPAYER       *190827*0212*^*00501*191511902*0*P*>~\n          GS*HP*ABCD*ABCD*20190827*12345678*12345678*X*005010X221A1~\n          ST*835*10060875~\n          BPR*I*8000.00*C*CHK************20190816~\n          TRN*1*CK NUMBER 1*1234567890~\n          REF*EV*FAC~\n          DTM*405*20190827~\n          N1*PR*ANY PLAN USA~\n          N3*1 WALK THIS WAY~\n          N4*ANYCITY*OH*45209~\n          PER*CX**TE*8661112222~\n          PER*BL*EDI*TE*8002223333*EM*EDI.SUPPORT@ANYPAYER.COM~\n          PER*IC**UR*WWW.ANYPAYER.COM~\n          N1*PE*PROVIDER*XX*1123454567~\n          N3*2255 ANY ROAD~\n          N4*ANY CITY*CA*12211~\n          REF*TJ*123456789~\n          LX*1~\n          CLP*PATACCT*1*40000*8000**MC*CLAIMNUMBER*11*1~\n          CAS*CO*197*2000*1*45*30000~\n          NM1*QC*1*DOE*JOHN*N***MI*ABC123456789~\n          REF*1L*12345F~\n          DTM*232*20190101~\n          DTM*233*20190105~\n          DTM*050*20190209~\n          PER*CX*G CUSTOMER SERVICE DEPARTMENT*TE*8004001212~\n          AMT*AU*38000~\n          QTY*CA*4~\n          SE*27*10060875~\n          GE*1*12345678~\n          IEA*1*191511902~\n        \"#\n    }\n  }\n}\n",
    "X12N/835/5010_X221A1/tests/extractor/test_subscriber_missing_middle_initial.baml": "test Test_XX12_835_5010_X221A1_SubscriberMissingMiddleInitial {\n  functions [X12_835_5010_X221A1_Extractor]\n  args {\n    params {\n        body #\"\n          ISA*00*          *00*          *ZZ*ABCPAYER       *ZZ*ABCPAYER       *190827*0212*^*00501*191511902*0*P*>~\n          GS*HP*ABCD*ABCD*20190827*12345678*12345678*X*005010X221A1~\n          ST*835*10060875~\n          BPR*I*2415.25*C*CHK************20190816~\n          TRN*1*CK NUMBER 1*1234567890~\n          REF*EV*FAC~\n          DTM*405*20190827~\n          N1*PR*ANY PLAN USA~\n          N3*1 WALK THIS WAY~\n          N4*ANYCITY*OH*45209~\n          PER*CX**TE*8661112222~\n          PER*BL*EDI*TE*8002223333*EM*EDI.SUPPORT@ANYPAYER.COM~\n          PER*IC**UR*WWW.ANYPAYER.COM~\n          N1*PE*PROVIDER*XX*1123454567~\n          N3*2255 ANY ROAD~\n          N4*ANY CITY*CA*12211~\n          REF*TJ*123456789~\n          LX*1~\n          CLP*05444444TLC999999*1*3903*2415.25**13*8777777782*21*1~\n          NM1*QC*1*GONZALES*SAMMY****MI*80455555502~\n          NM1*IL*1*LAPLANTE*FERN****MI*80455555502~\n          NM1*74*1***R~\n          NM1*82*1*GOOD MD*ROBERT B****XX*19999999987~\n          REF*1L*28~\n          REF*CE*OAPOS-LAOA~\n          DTM*232*20191101~\n          DTM*233*20191101~\n          DTM*050*20191114~\n          AMT*AU*3903~\n          AMT*F5*150~\n          SVC*HC>59400*3903*2415.25**1~\n          DTM*472*20191101~\n          CAS*CO*45*1487.75~\n          REF*LU*21~\n          REF*6R*22215592~\n          AMT*B6*2415.25~\n          SE*35*10060875~\n          GE*1*12345678~\n          IEA*1*191511902~\n        \"#\n    }\n  }  \n}\n",
    "X12N/835/5010_X221A1/tests/validator/test_non_compliant_transaction.baml": "test Test_X12_835_5010_X221A1_NonCompliantTransaction {\n  functions [X12_835_5010_X221A1_Validator]\n  args {\n    params {\n      body #\"\n        ISA*00*          *00*          *ZZ*INVALIDPAYER    *ZZ*ABCPAYER       *190827*0212*^*00501*123456789*0*P*>~\n        GS*HP*INVALID*ABCD*20190827*12345678*12345678*X*005010X221A1~\n        ST*835*123456789~\n        BPR*I*80.00*C*CHK************20190816~\n        TRN*1*INVALID CHECK NUMBER*1234567890~\n        REF*INVALID*FAC~\n        DTM*405*20190827~\n        N1*PR*ANY PLAN USA~\n        N3*1 WALK THIS WAY~\n        N4*ANYCITY*OH*45209~\n        PER*CX**TE*8661112222~\n        N1*PE*PROVIDER~\n        REF*TJ~\n        LX*1~\n        CLP*PATACCT*1*400*80**MC~\n        NM1*QC*1*DOE*JOHN~\n        REF*1L*12345F~\n        SE*12*123456789~\n        GE*1*12345678~\n        IEA*1*123456789~\n      \"#\n    }\n  }\n}\n",
    "X12N/835/5010_X221A1/validator.v0.baml": "\nclass X12_835_5010_X221A1_Validator_Schema_Errors {\n    segment string\n    element string\n    issue string\n    description string\n}\n\nclass X12_835_5010_X221A1_Validator_Schema {\n    status (\"failed\" | \"passed\")\n    message string?\n    errors X12_835_5010_X221A1_Validator_Schema_Errors[]\n}\n\nclass X12_835_5010_X221A1_Validator_Input_V0 {\n    body string\n}\n\nclass X12_835_5010_X221A1_Validator_Output_V0 {\n    data X12_835_5010_X221A1_Validator_Schema @description(#\"\n        Example Input:\n        ---\n        ---\n    \"#)\n}\n\n\nfunction X12_835_5010_X221A1_Validator(params: X12_835_5010_X221A1_Validator_Input_V0) -> X12_835_5010_X221A1_Validator_Output_V0 {\n  client CustomAWS_Mistral_Large_2401_V1\n  prompt #\"\n    You are an expert in X12 Electronic Data Interchange (EDI) validation, specializing in the 835 X221A1 - Health Care Claim Payment/Advice transaction set. Your task is to validate the formatting and structure of raw X12 transaction data according to the HIPAA X12 Release 5010 standard.\n\n    Responsibilities:\n    1. Validation Scope:\n    - Confirm compliance with the X12 HIPAA 5010 specifications for 835 X221A1.\n    - Identify and report any formatting errors, inconsistencies, or deviations from the standard.\n\n    2. Validation Checklist:\n    - Transaction Envelope Validation:\n        - Verify that the ISA (Interchange Control Header) and IEA (Interchange Control Trailer) segments are present, properly formatted, and paired.\n        - Validate the GS (Functional Group Header) and GE (Functional Group Trailer) segments.\n        - Check that control numbers match between the header and trailer segments (e.g., ISA13 and IEA02, GS06 and GE02).\n    - Segment Validation:\n        - Ensure each segment is terminated with the designated segment terminator (~).\n        - Verify that the correct number of data elements is present in each segment and that optional elements adhere to constraints.\n    - Element Validation:\n        - Confirm that mandatory data elements are present and formatted correctly (e.g., numeric elements are valid numbers, dates are in CCYYMMDD format).\n        - Check for invalid, extra, or missing delimiters: element separator (*) and component separator (:).\n    - Loop Structure Validation:\n        - Validate that hierarchical loops (e.g., 1000A, 2000, 2100) are structured correctly and adhere to the specified repeat counts.\n        - Ensure nested relationships between parent and child loops are maintained.\n    - Transaction-Specific Validation:\n        - Verify compliance with specific requirements for 835 X221A1, such as:\n        - Claim Payment Information (CLP).\n        - Adjustments (CAS).\n        - Service Payment Information (SVC).\n        - Monetary and Quantity values (AMT, QTY).\n\n    3. Validation Rules:\n    - For invalid or malformed transactions, return a detailed report of errors, including:\n        - Segment name.\n        - Element/loop in error.\n        - Description of the issue (e.g., \"Missing mandatory element CLP01,\" \"Invalid date format in DTM02\").\n    - Highlight discrepancies in the control totals or other cross-referenced fields (e.g., ISA segment control number inconsistencies).\n    - If the transaction is valid, return a confirmation message stating: \"Validation Successful: The transaction conforms to the X12 HIPAA 5010 standard.\"\n\n    4. Error Reporting Format:\n    - Use a structured JSON format to report validation results:\n    {\n        \"status\": \"failed\",\n        \"errors\": [\n        {\n            \"segment\": \"CLP\",\n            \"element\": \"CLP01\",\n            \"issue\": \"Missing mandatory data element\",\n            \"description\": \"CLP01 is required for Claim Payment Information.\"\n        },\n        {\n            \"segment\": \"DTM\",\n            \"element\": \"DTM02\",\n            \"issue\": \"Invalid date format\",\n            \"description\": \"DTM02 must be in CCYYMMDD format.\"\n        }\n        ],\n        \"summary\": {\n        \"total_errors\": 2,\n        \"transaction_status\": \"Rejected\"\n        }\n    }\n\n    5. Validation Context:\n    - Focus exclusively on the 835 X221A1 transaction.\n    - Assume all necessary delimiters (~, *, :) and control structures are predefined but validate their correctness.\n\n    Examples:\n    - Valid Transaction: Return:\n    {\n        \"status\": \"passed\",\n        \"message\": \"Validation Successful: The transaction conforms to the X12 HIPAA 5010 standard.\"\n    }\n\n    - Invalid Transaction: Return a detailed error report as described above.\n\n    Your expertise ensures precise validation of the 835 X221A1 transaction, identifying errors and providing actionable feedback for correction.\n\n    Validate this X12 transaction:\n     ---\n     {{ params.body }}\n     ---\n\n     {{ ctx.output_format }}     \n  \"#\n}\n",
    "clients.baml": "client<llm> CustomAWS_Mistral_Large_2401_V1 {\n  provider aws-bedrock\n  options {\n    model \"mistral.mistral-large-2402-v1:0\"\n    region env.AWS_REGION\n    access_key_id env.AWS_ACCESS_KEY_ID\n    secret_access_key env.AWS_SECRET_ACCESS_KEY\n  }\n}\n",
    "generators.baml": "generator target {\n    output_type \"python/pydantic\"\n    output_dir \"../\"\n    version \"0.70.5\"\n    default_client_mode sync\n}\n",
}

def get_baml_files():
    return file_map